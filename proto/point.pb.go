// Code generated by protoc-gen-go. DO NOT EDIT.
// source: point.proto

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	point.proto

It has these top-level messages:
	InfluxResult
	Point
	ThingId
	GroupId
	StringPoint
	FloatPoint
	IntegerPoint
	DurationPoint
	DateTimePoint
	BoolPoint
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/empty"
import google_protobuf1 "github.com/golang/protobuf/ptypes/timestamp"
import google_protobuf2 "github.com/golang/protobuf/ptypes/duration"
import google_protobuf3 "github.com/golang/protobuf/ptypes/any"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type InfluxResult struct {
	Item []byte `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (m *InfluxResult) Reset()                    { *m = InfluxResult{} }
func (m *InfluxResult) String() string            { return proto1.CompactTextString(m) }
func (*InfluxResult) ProtoMessage()               {}
func (*InfluxResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *InfluxResult) GetItem() []byte {
	if m != nil {
		return m.Item
	}
	return nil
}

type Point struct {
	User         string                           `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
	Tags         map[string]string                `protobuf:"bytes,2,rep,name=tags" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Fields       map[string]*google_protobuf3.Any `protobuf:"bytes,3,rep,name=fields" json:"fields,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	DateCreation *google_protobuf1.Timestamp      `protobuf:"bytes,4,opt,name=dateCreation" json:"dateCreation,omitempty"`
}

func (m *Point) Reset()                    { *m = Point{} }
func (m *Point) String() string            { return proto1.CompactTextString(m) }
func (*Point) ProtoMessage()               {}
func (*Point) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Point) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *Point) GetTags() map[string]string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Point) GetFields() map[string]*google_protobuf3.Any {
	if m != nil {
		return m.Fields
	}
	return nil
}

func (m *Point) GetDateCreation() *google_protobuf1.Timestamp {
	if m != nil {
		return m.DateCreation
	}
	return nil
}

type ThingId struct {
	User    string                      `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
	ThingId string                      `protobuf:"bytes,2,opt,name=thingId" json:"thingId,omitempty"`
	Start   *google_protobuf1.Timestamp `protobuf:"bytes,3,opt,name=start" json:"start,omitempty"`
	End     *google_protobuf1.Timestamp `protobuf:"bytes,4,opt,name=end" json:"end,omitempty"`
}

func (m *ThingId) Reset()                    { *m = ThingId{} }
func (m *ThingId) String() string            { return proto1.CompactTextString(m) }
func (*ThingId) ProtoMessage()               {}
func (*ThingId) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ThingId) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *ThingId) GetThingId() string {
	if m != nil {
		return m.ThingId
	}
	return ""
}

func (m *ThingId) GetStart() *google_protobuf1.Timestamp {
	if m != nil {
		return m.Start
	}
	return nil
}

func (m *ThingId) GetEnd() *google_protobuf1.Timestamp {
	if m != nil {
		return m.End
	}
	return nil
}

type GroupId struct {
	User    string                      `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
	GroupId string                      `protobuf:"bytes,2,opt,name=groupId" json:"groupId,omitempty"`
	Start   *google_protobuf1.Timestamp `protobuf:"bytes,3,opt,name=start" json:"start,omitempty"`
	End     *google_protobuf1.Timestamp `protobuf:"bytes,4,opt,name=end" json:"end,omitempty"`
}

func (m *GroupId) Reset()                    { *m = GroupId{} }
func (m *GroupId) String() string            { return proto1.CompactTextString(m) }
func (*GroupId) ProtoMessage()               {}
func (*GroupId) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *GroupId) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *GroupId) GetGroupId() string {
	if m != nil {
		return m.GroupId
	}
	return ""
}

func (m *GroupId) GetStart() *google_protobuf1.Timestamp {
	if m != nil {
		return m.Start
	}
	return nil
}

func (m *GroupId) GetEnd() *google_protobuf1.Timestamp {
	if m != nil {
		return m.End
	}
	return nil
}

type StringPoint struct {
	Value string `protobuf:"bytes,1,opt,name=value" json:"value,omitempty"`
}

func (m *StringPoint) Reset()                    { *m = StringPoint{} }
func (m *StringPoint) String() string            { return proto1.CompactTextString(m) }
func (*StringPoint) ProtoMessage()               {}
func (*StringPoint) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *StringPoint) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type FloatPoint struct {
	Value float32 `protobuf:"fixed32,1,opt,name=value" json:"value,omitempty"`
}

func (m *FloatPoint) Reset()                    { *m = FloatPoint{} }
func (m *FloatPoint) String() string            { return proto1.CompactTextString(m) }
func (*FloatPoint) ProtoMessage()               {}
func (*FloatPoint) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *FloatPoint) GetValue() float32 {
	if m != nil {
		return m.Value
	}
	return 0
}

type IntegerPoint struct {
	Value int32 `protobuf:"varint,1,opt,name=value" json:"value,omitempty"`
}

func (m *IntegerPoint) Reset()                    { *m = IntegerPoint{} }
func (m *IntegerPoint) String() string            { return proto1.CompactTextString(m) }
func (*IntegerPoint) ProtoMessage()               {}
func (*IntegerPoint) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *IntegerPoint) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

type DurationPoint struct {
	Value *google_protobuf2.Duration `protobuf:"bytes,1,opt,name=value" json:"value,omitempty"`
}

func (m *DurationPoint) Reset()                    { *m = DurationPoint{} }
func (m *DurationPoint) String() string            { return proto1.CompactTextString(m) }
func (*DurationPoint) ProtoMessage()               {}
func (*DurationPoint) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *DurationPoint) GetValue() *google_protobuf2.Duration {
	if m != nil {
		return m.Value
	}
	return nil
}

type DateTimePoint struct {
	Value *google_protobuf1.Timestamp `protobuf:"bytes,1,opt,name=value" json:"value,omitempty"`
}

func (m *DateTimePoint) Reset()                    { *m = DateTimePoint{} }
func (m *DateTimePoint) String() string            { return proto1.CompactTextString(m) }
func (*DateTimePoint) ProtoMessage()               {}
func (*DateTimePoint) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *DateTimePoint) GetValue() *google_protobuf1.Timestamp {
	if m != nil {
		return m.Value
	}
	return nil
}

type BoolPoint struct {
	Value bool `protobuf:"varint,1,opt,name=value" json:"value,omitempty"`
}

func (m *BoolPoint) Reset()                    { *m = BoolPoint{} }
func (m *BoolPoint) String() string            { return proto1.CompactTextString(m) }
func (*BoolPoint) ProtoMessage()               {}
func (*BoolPoint) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *BoolPoint) GetValue() bool {
	if m != nil {
		return m.Value
	}
	return false
}

func init() {
	proto1.RegisterType((*InfluxResult)(nil), "proto.InfluxResult")
	proto1.RegisterType((*Point)(nil), "proto.Point")
	proto1.RegisterType((*ThingId)(nil), "proto.ThingId")
	proto1.RegisterType((*GroupId)(nil), "proto.GroupId")
	proto1.RegisterType((*StringPoint)(nil), "proto.StringPoint")
	proto1.RegisterType((*FloatPoint)(nil), "proto.FloatPoint")
	proto1.RegisterType((*IntegerPoint)(nil), "proto.IntegerPoint")
	proto1.RegisterType((*DurationPoint)(nil), "proto.DurationPoint")
	proto1.RegisterType((*DateTimePoint)(nil), "proto.DateTimePoint")
	proto1.RegisterType((*BoolPoint)(nil), "proto.BoolPoint")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for PointSvc service

type PointSvcClient interface {
	CreatePoint(ctx context.Context, in *Point, opts ...grpc.CallOption) (*google_protobuf.Empty, error)
	GetPointsByThing(ctx context.Context, in *ThingId, opts ...grpc.CallOption) (*InfluxResult, error)
	GetPointsByGroup(ctx context.Context, in *GroupId, opts ...grpc.CallOption) (*InfluxResult, error)
}

type pointSvcClient struct {
	cc *grpc.ClientConn
}

func NewPointSvcClient(cc *grpc.ClientConn) PointSvcClient {
	return &pointSvcClient{cc}
}

func (c *pointSvcClient) CreatePoint(ctx context.Context, in *Point, opts ...grpc.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc.Invoke(ctx, "/proto.PointSvc/CreatePoint", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pointSvcClient) GetPointsByThing(ctx context.Context, in *ThingId, opts ...grpc.CallOption) (*InfluxResult, error) {
	out := new(InfluxResult)
	err := grpc.Invoke(ctx, "/proto.PointSvc/GetPointsByThing", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pointSvcClient) GetPointsByGroup(ctx context.Context, in *GroupId, opts ...grpc.CallOption) (*InfluxResult, error) {
	out := new(InfluxResult)
	err := grpc.Invoke(ctx, "/proto.PointSvc/GetPointsByGroup", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for PointSvc service

type PointSvcServer interface {
	CreatePoint(context.Context, *Point) (*google_protobuf.Empty, error)
	GetPointsByThing(context.Context, *ThingId) (*InfluxResult, error)
	GetPointsByGroup(context.Context, *GroupId) (*InfluxResult, error)
}

func RegisterPointSvcServer(s *grpc.Server, srv PointSvcServer) {
	s.RegisterService(&_PointSvc_serviceDesc, srv)
}

func _PointSvc_CreatePoint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Point)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointSvcServer).CreatePoint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.PointSvc/CreatePoint",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointSvcServer).CreatePoint(ctx, req.(*Point))
	}
	return interceptor(ctx, in, info, handler)
}

func _PointSvc_GetPointsByThing_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ThingId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointSvcServer).GetPointsByThing(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.PointSvc/GetPointsByThing",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointSvcServer).GetPointsByThing(ctx, req.(*ThingId))
	}
	return interceptor(ctx, in, info, handler)
}

func _PointSvc_GetPointsByGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GroupId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointSvcServer).GetPointsByGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.PointSvc/GetPointsByGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointSvcServer).GetPointsByGroup(ctx, req.(*GroupId))
	}
	return interceptor(ctx, in, info, handler)
}

var _PointSvc_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.PointSvc",
	HandlerType: (*PointSvcServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreatePoint",
			Handler:    _PointSvc_CreatePoint_Handler,
		},
		{
			MethodName: "GetPointsByThing",
			Handler:    _PointSvc_GetPointsByThing_Handler,
		},
		{
			MethodName: "GetPointsByGroup",
			Handler:    _PointSvc_GetPointsByGroup_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "point.proto",
}

func init() { proto1.RegisterFile("point.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 514 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x94, 0xdd, 0x6e, 0x9b, 0x4c,
	0x10, 0x86, 0x3f, 0xc0, 0x24, 0xf1, 0xe0, 0x7c, 0x8a, 0xb6, 0x51, 0x44, 0xa8, 0xd4, 0xba, 0xb4,
	0x07, 0x56, 0x54, 0x61, 0x8b, 0xaa, 0xea, 0xcf, 0x41, 0xd5, 0xa4, 0xf9, 0x51, 0x8e, 0x5a, 0x11,
	0xdf, 0xc0, 0xa6, 0xac, 0x29, 0x2a, 0x66, 0xd1, 0x32, 0x44, 0xe5, 0x4a, 0x7a, 0x29, 0xbd, 0x80,
	0xde, 0x58, 0xc5, 0xee, 0x62, 0x61, 0x9b, 0xb4, 0x3d, 0xe9, 0x11, 0x3b, 0xbc, 0xcf, 0x0c, 0xef,
	0x0c, 0x03, 0xe0, 0x14, 0x3c, 0xcd, 0x31, 0x28, 0x04, 0x47, 0x4e, 0x6c, 0x79, 0xf1, 0x1e, 0x26,
	0x9c, 0x27, 0x19, 0x9b, 0xca, 0xe8, 0xb6, 0x5a, 0x4c, 0xd9, 0xb2, 0xc0, 0x5a, 0x31, 0xde, 0xe3,
	0x4d, 0x11, 0xd3, 0x25, 0x2b, 0x91, 0x2e, 0x0b, 0x0d, 0x3c, 0xda, 0x04, 0xe2, 0x4a, 0x50, 0x4c,
	0x79, 0xae, 0xf5, 0xe3, 0x4d, 0x9d, 0xe6, 0xba, 0xb6, 0xef, 0xc3, 0xe8, 0x3a, 0x5f, 0x64, 0xd5,
	0xb7, 0x88, 0x95, 0x55, 0x86, 0x84, 0xc0, 0x20, 0x45, 0xb6, 0x74, 0x8d, 0xb1, 0x31, 0x19, 0x45,
	0xf2, 0xec, 0xff, 0x34, 0xc1, 0xfe, 0xd4, 0x78, 0x6e, 0xd4, 0xaa, 0x64, 0x42, 0xaa, 0xc3, 0x48,
	0x9e, 0xc9, 0x09, 0x0c, 0x90, 0x26, 0xa5, 0x6b, 0x8e, 0xad, 0x89, 0x13, 0x1e, 0xa9, 0xba, 0x81,
	0xe4, 0x83, 0x39, 0x4d, 0xca, 0x8b, 0x1c, 0x45, 0x1d, 0x49, 0x86, 0xcc, 0x60, 0x67, 0x91, 0xb2,
	0x2c, 0x2e, 0x5d, 0x4b, 0xd2, 0xee, 0x1a, 0x7d, 0x29, 0x25, 0xc5, 0x6b, 0x8e, 0xbc, 0x83, 0x51,
	0x4c, 0x91, 0x7d, 0x10, 0x4c, 0x36, 0xe4, 0x0e, 0xc6, 0xc6, 0xc4, 0x09, 0xbd, 0x40, 0x75, 0x14,
	0xb4, 0x1d, 0x05, 0xf3, 0x76, 0x24, 0xd1, 0x1a, 0xef, 0xbd, 0x82, 0xe1, 0xca, 0x04, 0x39, 0x00,
	0xeb, 0x2b, 0xab, 0xb5, 0xfb, 0xe6, 0x48, 0x0e, 0xc1, 0xbe, 0xa3, 0x59, 0xc5, 0x5c, 0x53, 0xde,
	0x53, 0xc1, 0x5b, 0xf3, 0xb5, 0xe1, 0x7d, 0x04, 0xa7, 0xe3, 0xa7, 0x27, 0xf5, 0xa4, 0x9b, 0xea,
	0x84, 0x87, 0x5b, 0x96, 0x4e, 0xf3, 0xba, 0x53, 0xd0, 0xff, 0x6e, 0xc0, 0xee, 0xfc, 0x4b, 0x9a,
	0x27, 0xd7, 0x71, 0xef, 0x1c, 0x5d, 0xd8, 0x45, 0x25, 0x6b, 0x33, 0x6d, 0x48, 0x66, 0x60, 0x97,
	0x48, 0x05, 0xba, 0xd6, 0x1f, 0x9b, 0x57, 0x20, 0x79, 0x0e, 0x16, 0xcb, 0xe3, 0xbf, 0x18, 0x56,
	0x83, 0x49, 0x67, 0x57, 0x82, 0x57, 0xc5, 0xfd, 0xce, 0x12, 0x25, 0xb7, 0xce, 0x74, 0xf8, 0xcf,
	0x9d, 0x3d, 0x05, 0xe7, 0x06, 0x45, 0x9a, 0x27, 0x6a, 0xfd, 0x56, 0x6f, 0xcb, 0xe8, 0xbc, 0x2d,
	0xdf, 0x07, 0xb8, 0xcc, 0x38, 0xc5, 0x1e, 0xc6, 0x6c, 0x99, 0x67, 0xcd, 0x9a, 0x23, 0x4b, 0x98,
	0xe8, 0xa1, 0xec, 0x96, 0x7a, 0x0f, 0xfb, 0xe7, 0xfa, 0xcb, 0x51, 0xd8, 0xb4, 0x8b, 0x39, 0xe1,
	0xf1, 0x96, 0xdf, 0x16, 0x6f, 0x2b, 0x9c, 0xc2, 0xfe, 0x39, 0x45, 0xd6, 0xb4, 0xa1, 0x2a, 0xcc,
	0xd6, 0x2b, 0xfc, 0x76, 0x42, 0xaa, 0xc4, 0x13, 0x18, 0x9e, 0x71, 0x9e, 0xf5, 0xf8, 0xdc, 0xd3,
	0x48, 0xf8, 0xc3, 0x80, 0x3d, 0xa9, 0xdf, 0xdc, 0x7d, 0x26, 0x2f, 0xc1, 0x91, 0xdb, 0xae, 0x1f,
	0x38, 0xea, 0x7e, 0x52, 0xde, 0xd1, 0xd6, 0xf3, 0x2e, 0x9a, 0x1f, 0x8b, 0xff, 0x1f, 0x79, 0x03,
	0x07, 0x57, 0x4c, 0xcd, 0xac, 0x3c, 0xab, 0xe5, 0x62, 0x92, 0xff, 0x75, 0xae, 0x5e, 0x53, 0xef,
	0x81, 0x8e, 0xbb, 0x7f, 0x88, 0xad, 0x54, 0xb9, 0x39, 0xab, 0x54, 0xbd, 0x47, 0xf7, 0xa4, 0xde,
	0xee, 0xc8, 0xbb, 0x2f, 0x7e, 0x05, 0x00, 0x00, 0xff, 0xff, 0x67, 0xea, 0xe9, 0x51, 0x04, 0x05,
	0x00, 0x00,
}
